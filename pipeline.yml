cache-config: &cache-config
  caches:
    - path: $HOME/.m2/repository
    - path: $HOME/.gradle/caches/
    - path: $HOME/.gradle/wrapper/

resources:
  - name: spring-boot-service
    type: git
    icon: github
    source:
      uri: https://github.com/ChuckPhilips/maven.git
      branch: main

  - name: spring-boot-service-docker-repository
    type: docker-image
    icon: docker
    source:
      email: ((docker-hub-email))
      username: ((docker-hub-username))
      password: ((docker-hub-password))
      repository: ((docker-hub-username))/((docker-hub-repo-name))

  - name: terraform-image
    type: git
    icon: github
    source:
      uri: https://github.com/hashicorp/docker-hub-images.git
      branch: master

jobs:
  - name: test
    public: true

    plan:
      - get: spring-boot-service
        trigger: true
      - task: mvn-test
        config:
          <<: *cache-config
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
              tag: 3.6.0-jdk-8-alpine
          inputs:
            - name: spring-boot-service
          run:
            path: 'mvn'
            args:
              - -f
              - spring-boot-service/pom.xml
              - clean
              - test
          params:
            USERNAME: test # this will be env var for the container
            PASSWORD: test

      - task: mvn-test
        config:
          <<: *cache-config
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: alpine }
          inputs:
            - name: spring-boot-service
          run:
            path: sh
            args:
              - -cx
              - |
                ls -lah ./spring-boot-service

  - name: package
    public: true
    serial: true
    plan:
      - get: spring-boot-service
        trigger: true
        passed: [test]
      - task: mvn-package
        config:
          <<: *cache-config
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
              tag: 3.6.0-jdk-8-alpine
          inputs:
            - name: spring-boot-service
          run:
            path: 'mvn'
            args:
              - -f
              - spring-boot-service/pom.xml
              - clean
              - package

          outputs:
            - name: spring-boot-service-out
              path: spring-boot-service

      - put: spring-boot-service-docker-repository
        params:
          build: spring-boot-service-out

      - task: mvn-test
        config:
          <<: *cache-config
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: alpine }
          inputs:
            - name: spring-boot-service-out
          run:
            path: sh
            args:
              - -cx
              - |
                ls -alh
                ls -lah ./spring-boot-service-out

  - name: deploy
    public: true
    serial: true
    plan:
      - get: terraform-image
      - get: spring-boot-service
        trigger: true
        passed: [package]

      - task: check-terrafom-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: hashicorp/terraform }
          run:
            path: sh
            args:
              - -exc
              - |
                terraform --version
